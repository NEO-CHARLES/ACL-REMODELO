(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(*SETUP OP40 - CELULA DE CARGA CALIBRAÇÃO*)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := __SYSVA_POWERUP_BIT ;
__EDTB2 := __EDTB1 ;
IF __EDTB2 THEN
RMINIMO_AI3 := (  2100.0) ;
END_IF ;
__MO_1GAIN_1 := __EDTB2 ;
__EDTB3 := __EDTB2 ;
__EDTB4 := __EDTB1 ;
IF __EDTB4 THEN
RMAXIMO_AI3 := (  8500.0) ;
END_IF ;
__MO_1GAIN_2 := __EDTB4 ;
__EDTB5 := __EDTB4 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP40 - CELULA DE CARGA PARAMETROS*)
__STEPPRAGMA
0,6
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB6 := __SYSVA_POWERUP_BIT ;
__EDTB7 := __EDTB6 ;
IF __EDTB7 THEN
CC1_MN := (  85) ;
END_IF ;
__MO_1GAIN_3 := __EDTB7 ;
__EDTB8 := __EDTB7 ;
__EDTB9 := __EDTB6 ;
IF __EDTB9 THEN
CC1_MX := (  120) ;
END_IF ;
__MO_1GAIN_4 := __EDTB9 ;
__EDTB10 := __EDTB9 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - REGUA A CALIBRAÇÃO*)
__STEPPRAGMA
0,11
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB11 := __SYSVA_POWERUP_BIT ;
__EDTB12 := __EDTB11 ;
IF __EDTB12 THEN
RMINIMO_AI0 := (  0.0) ;
END_IF ;
__MO_1GAIN_5 := __EDTB12 ;
__EDTB13 := __EDTB12 ;
__EDTB14 := __EDTB11 ;
IF __EDTB14 THEN
RMAXIMO_AI0 := (  9800.0) ;
END_IF ;
__MO_1GAIN_6 := __EDTB14 ;
__EDTB15 := __EDTB14 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - REGUA A PARAMETROS*)
__STEPPRAGMA
0,16
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB16 := __SYSVA_POWERUP_BIT ;
__EDTB17 := __EDTB16 ;
IF __EDTB17 THEN
RMINIMO_REGUAA := (  250.0) ;
END_IF ;
__MO_1GAIN_7 := __EDTB17 ;
__EDTB18 := __EDTB17 ;
__EDTB19 := __EDTB16 ;
IF __EDTB19 THEN
RMAXIMO_REGUAA := (  700.0) ;
END_IF ;
__MO_1GAIN_8 := __EDTB19 ;
__EDTB20 := __EDTB19 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - REGUA B CALIBRAÇÃO*)
__STEPPRAGMA
0,21
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB21 := __SYSVA_POWERUP_BIT ;
__EDTB22 := __EDTB21 ;
IF __EDTB22 THEN
RMINIMO_AI1 := (  0.0) ;
END_IF ;
__MO_1GAIN_9 := __EDTB22 ;
__EDTB23 := __EDTB22 ;
__EDTB24 := __EDTB21 ;
IF __EDTB24 THEN
RMAXIMO_AI1 := (  9800.0) ;
END_IF ;
__MO_1GAIN_10 := __EDTB24 ;
__EDTB25 := __EDTB24 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - REGUA B PARAMETROS*)
__STEPPRAGMA
0,26
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB26 := __SYSVA_POWERUP_BIT ;
__EDTB27 := __EDTB26 ;
IF __EDTB27 THEN
RMINIMO_REGUAB := (  280.0) ;
END_IF ;
__MO_1GAIN_11 := __EDTB27 ;
__EDTB28 := __EDTB27 ;
__EDTB29 := __EDTB26 ;
IF __EDTB29 THEN
RMAXIMO_REGUAB := (  900.0) ;
END_IF ;
__MO_1GAIN_12 := __EDTB29 ;
__EDTB30 := __EDTB29 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - SENSOR DE CORRENTE CALIBRAÇÃO*)
__STEPPRAGMA
0,31
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB31 := __SYSVA_POWERUP_BIT ;
__EDTB32 := __EDTB31 ;
IF __EDTB32 THEN
RMINIMO_AI2 := (  16660.0) ;
END_IF ;
__MO_1GAIN_13 := __EDTB32 ;
__EDTB33 := __EDTB32 ;
__EDTB34 := __EDTB31 ;
IF __EDTB34 THEN
RMAXIMO_AI2 := (  18150.0) ;
END_IF ;
__MO_1GAIN_14 := __EDTB34 ;
__EDTB35 := __EDTB34 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - SENSOR DE CORRENTE PARAMETROS*)
__STEPPRAGMA
0,36
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB36 := __SYSVA_POWERUP_BIT ;
__EDTB37 := __EDTB36 ;
IF __EDTB37 THEN
RMINIMO_AQUECIMENTO := (  0.7) ;
END_IF ;
__MO_1GAIN_15 := __EDTB37 ;
__EDTB38 := __EDTB37 ;
__EDTB39 := __EDTB36 ;
IF __EDTB39 THEN
RMAXIMO_AQUECIMENTO := (  2.0) ;
END_IF ;
__MO_1GAIN_16 := __EDTB39 ;
__EDTB40 := __EDTB39 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*SETUP OP60 - DIFERENCIAL REGUAS*)
__STEPPRAGMA
0,41
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB41 := T1 ;
__EDTB42 := __EDTB41 ;
IF __EDTB42 THEN
RDIF_REGUAA := (  100.0) ;
END_IF ;
__MO_1GAIN_17 := __EDTB42 ;
__EDTB43 := __EDTB42 ;
__EDTB44 := __EDTB41 ;
IF __EDTB44 THEN
RDIF_REGUAB := (  100.0) ;
END_IF ;
__MO_1GAIN_18 := __EDTB44 ;
__EDTB45 := __EDTB44 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,46
__ENDSTEPPRAGMA
(*Label :*)(**)

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)
(* __EDTB15 *)
(* __EDTB16 *)
(* __EDTB17 *)
(* __EDTB18 *)
(* __EDTB19 *)
(* __EDTB20 *)
(* __EDTB21 *)
(* __EDTB22 *)
(* __EDTB23 *)
(* __EDTB24 *)
(* __EDTB25 *)
(* __EDTB26 *)
(* __EDTB27 *)
(* __EDTB28 *)
(* __EDTB29 *)
(* __EDTB30 *)
(* __EDTB31 *)
(* __EDTB32 *)
(* __EDTB33 *)
(* __EDTB34 *)
(* __EDTB35 *)
(* __EDTB36 *)
(* __EDTB37 *)
(* __EDTB38 *)
(* __EDTB39 *)
(* __EDTB40 *)
(* __EDTB41 *)
(* __EDTB42 *)
(* __EDTB43 *)
(* __EDTB44 *)
(* __EDTB45 *)

