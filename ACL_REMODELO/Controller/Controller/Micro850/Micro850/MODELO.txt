(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(*Seleção de Modelo Sem Modelo Selecionado*)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB2 := TRUE ;
IF __EDTB2 THEN
(* Operator output on : = with __EDTB1 *)
__EDTB1 := (IHM_MODELNUMBER = 0) ;
ELSE
__EDTB1 := FALSE ;
END_IF ;
__MO_EQUAL_1 := __EDTB1 ;
MODELNOTSELECTED := __EDTB1 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Seleção de Modelo Esquerdo*)
__STEPPRAGMA
0,5
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB4 := TRUE ;
IF __EDTB4 THEN
(* Operator output on : = with __EDTB3 *)
__EDTB3 := (IHM_MODELNUMBER = 1) ;
ELSE
__EDTB3 := FALSE ;
END_IF ;
__MO_EQUAL_2 := __EDTB3 ;
__EDTB5 := __EDTB3 ;
__EDTB7 := TRUE ;
IF __EDTB7 THEN
(* Operator output on : = with __EDTB6 *)
__EDTB6 := (IHM_MODELNUMBER = 3) ;
ELSE
__EDTB6 := FALSE ;
END_IF ;
__MO_EQUAL_3 := __EDTB6 ;
__EDTB8 := __EDTB6 ;
__EDTB10 := TRUE ;
IF __EDTB10 THEN
(* Operator output on : = with __EDTB9 *)
__EDTB9 := (IHM_MODELNUMBER = 5) ;
ELSE
__EDTB9 := FALSE ;
END_IF ;
__MO_EQUAL_4 := __EDTB9 ;
__EDTB11 := __EDTB9 ;
__EDTB13 := TRUE ;
IF __EDTB13 THEN
(* Operator output on : = with __EDTB12 *)
__EDTB12 := (IHM_MODELNUMBER = 7) ;
ELSE
__EDTB12 := FALSE ;
END_IF ;
__MO_EQUAL_5 := __EDTB12 ;
__EDTB14 := __EDTB12 ;
__EDTB15 := (__EDTB11 OR __EDTB14) ;
__EDTB16 := (__EDTB8 OR __EDTB15) ;
MODELSIDELEFT := (__EDTB5 OR __EDTB16) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Selecao de Modelo Direito*)
__STEPPRAGMA
0,18
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB18 := TRUE ;
IF __EDTB18 THEN
(* Operator output on : = with __EDTB17 *)
__EDTB17 := (IHM_MODELNUMBER = 2) ;
ELSE
__EDTB17 := FALSE ;
END_IF ;
__MO_EQUAL_6 := __EDTB17 ;
__EDTB19 := __EDTB17 ;
__EDTB21 := TRUE ;
IF __EDTB21 THEN
(* Operator output on : = with __EDTB20 *)
__EDTB20 := (IHM_MODELNUMBER = 4) ;
ELSE
__EDTB20 := FALSE ;
END_IF ;
__MO_EQUAL_7 := __EDTB20 ;
__EDTB22 := __EDTB20 ;
__EDTB24 := TRUE ;
IF __EDTB24 THEN
(* Operator output on : = with __EDTB23 *)
__EDTB23 := (IHM_MODELNUMBER = 6) ;
ELSE
__EDTB23 := FALSE ;
END_IF ;
__MO_EQUAL_8 := __EDTB23 ;
__EDTB25 := __EDTB23 ;
__EDTB27 := TRUE ;
IF __EDTB27 THEN
(* Operator output on : = with __EDTB26 *)
__EDTB26 := (IHM_MODELNUMBER = 8) ;
ELSE
__EDTB26 := FALSE ;
END_IF ;
__MO_EQUAL_9 := __EDTB26 ;
__EDTB28 := __EDTB26 ;
__EDTB29 := (__EDTB25 OR __EDTB28) ;
__EDTB30 := (__EDTB22 OR __EDTB29) ;
MODELSIDERIGHT := (__EDTB19 OR __EDTB30) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Selecao de Modelo Eletrico*)
__STEPPRAGMA
0,31
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB32 := TRUE ;
IF __EDTB32 THEN
(* Operator output on : = with __EDTB31 *)
__EDTB31 := (IHM_MODELNUMBER = 5) ;
ELSE
__EDTB31 := FALSE ;
END_IF ;
__MO_EQUAL_10 := __EDTB31 ;
__EDTB33 := __EDTB31 ;
__EDTB35 := TRUE ;
IF __EDTB35 THEN
(* Operator output on : = with __EDTB34 *)
__EDTB34 := (IHM_MODELNUMBER = 6) ;
ELSE
__EDTB34 := FALSE ;
END_IF ;
__MO_EQUAL_11 := __EDTB34 ;
__EDTB36 := __EDTB34 ;
__EDTB38 := TRUE ;
IF __EDTB38 THEN
(* Operator output on : = with __EDTB37 *)
__EDTB37 := (IHM_MODELNUMBER = 7) ;
ELSE
__EDTB37 := FALSE ;
END_IF ;
__MO_EQUAL_12 := __EDTB37 ;
__EDTB39 := __EDTB37 ;
__EDTB41 := TRUE ;
IF __EDTB41 THEN
(* Operator output on : = with __EDTB40 *)
__EDTB40 := (IHM_MODELNUMBER = 8) ;
ELSE
__EDTB40 := FALSE ;
END_IF ;
__MO_EQUAL_13 := __EDTB40 ;
__EDTB42 := __EDTB40 ;
__EDTB43 := (__EDTB39 OR __EDTB42) ;
__EDTB44 := (__EDTB36 OR __EDTB43) ;
MODELAJUSTMENTREMOTE := (__EDTB33 OR __EDTB44) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Selecao de Modelo Manual*)
__STEPPRAGMA
0,44
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB46 := TRUE ;
IF __EDTB46 THEN
(* Operator output on : = with __EDTB45 *)
__EDTB45 := (IHM_MODELNUMBER = 1) ;
ELSE
__EDTB45 := FALSE ;
END_IF ;
__MO_EQUAL_14 := __EDTB45 ;
__EDTB47 := __EDTB45 ;
__EDTB49 := TRUE ;
IF __EDTB49 THEN
(* Operator output on : = with __EDTB48 *)
__EDTB48 := (IHM_MODELNUMBER = 2) ;
ELSE
__EDTB48 := FALSE ;
END_IF ;
__MO_EQUAL_15 := __EDTB48 ;
__EDTB50 := __EDTB48 ;
__EDTB52 := TRUE ;
IF __EDTB52 THEN
(* Operator output on : = with __EDTB51 *)
__EDTB51 := (IHM_MODELNUMBER = 3) ;
ELSE
__EDTB51 := FALSE ;
END_IF ;
__MO_EQUAL_16 := __EDTB51 ;
__EDTB53 := __EDTB51 ;
__EDTB55 := TRUE ;
IF __EDTB55 THEN
(* Operator output on : = with __EDTB54 *)
__EDTB54 := (IHM_MODELNUMBER = 4) ;
ELSE
__EDTB54 := FALSE ;
END_IF ;
__MO_EQUAL_17 := __EDTB54 ;
__EDTB56 := __EDTB54 ;
__EDTB57 := (__EDTB53 OR __EDTB56) ;
__EDTB58 := (__EDTB50 OR __EDTB57) ;
MODELADJUSTMENTMANUAL := (__EDTB47 OR __EDTB58) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Selecao de Modelo sem Aquecimento*)
__STEPPRAGMA
0,57
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB60 := TRUE ;
IF __EDTB60 THEN
(* Operator output on : = with __EDTB59 *)
__EDTB59 := (IHM_MODELNUMBER = 1) ;
ELSE
__EDTB59 := FALSE ;
END_IF ;
__MO_EQUAL_18 := __EDTB59 ;
__EDTB61 := __EDTB59 ;
__EDTB63 := TRUE ;
IF __EDTB63 THEN
(* Operator output on : = with __EDTB62 *)
__EDTB62 := (IHM_MODELNUMBER = 2) ;
ELSE
__EDTB62 := FALSE ;
END_IF ;
__MO_EQUAL_19 := __EDTB62 ;
__EDTB64 := __EDTB62 ;
__EDTB66 := TRUE ;
IF __EDTB66 THEN
(* Operator output on : = with __EDTB65 *)
__EDTB65 := (IHM_MODELNUMBER = 5) ;
ELSE
__EDTB65 := FALSE ;
END_IF ;
__MO_EQUAL_20 := __EDTB65 ;
__EDTB67 := __EDTB65 ;
__EDTB69 := TRUE ;
IF __EDTB69 THEN
(* Operator output on : = with __EDTB68 *)
__EDTB68 := (IHM_MODELNUMBER = 6) ;
ELSE
__EDTB68 := FALSE ;
END_IF ;
__MO_EQUAL_21 := __EDTB68 ;
__EDTB70 := __EDTB68 ;
__EDTB71 := (__EDTB67 OR __EDTB70) ;
__EDTB72 := (__EDTB64 OR __EDTB71) ;
MODELHEATINGNOT := (__EDTB61 OR __EDTB72) ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(*Selecao de Modelo com Aqeucimetno*)
__STEPPRAGMA
0,70
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB74 := TRUE ;
IF __EDTB74 THEN
(* Operator output on : = with __EDTB73 *)
__EDTB73 := (IHM_MODELNUMBER = 3) ;
ELSE
__EDTB73 := FALSE ;
END_IF ;
__MO_EQUAL_22 := __EDTB73 ;
__EDTB75 := __EDTB73 ;
__EDTB77 := TRUE ;
IF __EDTB77 THEN
(* Operator output on : = with __EDTB76 *)
__EDTB76 := (IHM_MODELNUMBER = 4) ;
ELSE
__EDTB76 := FALSE ;
END_IF ;
__MO_EQUAL_23 := __EDTB76 ;
__EDTB78 := __EDTB76 ;
__EDTB80 := TRUE ;
IF __EDTB80 THEN
(* Operator output on : = with __EDTB79 *)
__EDTB79 := (IHM_MODELNUMBER = 7) ;
ELSE
__EDTB79 := FALSE ;
END_IF ;
__MO_EQUAL_24 := __EDTB79 ;
__EDTB81 := __EDTB79 ;
__EDTB83 := TRUE ;
IF __EDTB83 THEN
(* Operator output on : = with __EDTB82 *)
__EDTB82 := (IHM_MODELNUMBER = 8) ;
ELSE
__EDTB82 := FALSE ;
END_IF ;
__MO_EQUAL_25 := __EDTB82 ;
__EDTB84 := __EDTB82 ;
__EDTB85 := (__EDTB81 OR __EDTB84) ;
__EDTB86 := (__EDTB78 OR __EDTB85) ;
MODELHEATINGWITH := (__EDTB75 OR __EDTB86) ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)
(* __EDTB15 *)
(* __EDTB16 *)
(* __EDTB17 *)
(* __EDTB18 *)
(* __EDTB19 *)
(* __EDTB20 *)
(* __EDTB21 *)
(* __EDTB22 *)
(* __EDTB23 *)
(* __EDTB24 *)
(* __EDTB25 *)
(* __EDTB26 *)
(* __EDTB27 *)
(* __EDTB28 *)
(* __EDTB29 *)
(* __EDTB30 *)
(* __EDTB31 *)
(* __EDTB32 *)
(* __EDTB33 *)
(* __EDTB34 *)
(* __EDTB35 *)
(* __EDTB36 *)
(* __EDTB37 *)
(* __EDTB38 *)
(* __EDTB39 *)
(* __EDTB40 *)
(* __EDTB41 *)
(* __EDTB42 *)
(* __EDTB43 *)
(* __EDTB44 *)
(* __EDTB45 *)
(* __EDTB46 *)
(* __EDTB47 *)
(* __EDTB48 *)
(* __EDTB49 *)
(* __EDTB50 *)
(* __EDTB51 *)
(* __EDTB52 *)
(* __EDTB53 *)
(* __EDTB54 *)
(* __EDTB55 *)
(* __EDTB56 *)
(* __EDTB57 *)
(* __EDTB58 *)
(* __EDTB59 *)
(* __EDTB60 *)
(* __EDTB61 *)
(* __EDTB62 *)
(* __EDTB63 *)
(* __EDTB64 *)
(* __EDTB65 *)
(* __EDTB66 *)
(* __EDTB67 *)
(* __EDTB68 *)
(* __EDTB69 *)
(* __EDTB70 *)
(* __EDTB71 *)
(* __EDTB72 *)
(* __EDTB73 *)
(* __EDTB74 *)
(* __EDTB75 *)
(* __EDTB76 *)
(* __EDTB77 *)
(* __EDTB78 *)
(* __EDTB79 *)
(* __EDTB80 *)
(* __EDTB81 *)
(* __EDTB82 *)
(* __EDTB83 *)
(* __EDTB84 *)
(* __EDTB85 *)
(* __EDTB86 *)

