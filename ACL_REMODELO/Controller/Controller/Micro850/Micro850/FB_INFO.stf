FUNCTION_BLOCK FB_INFO
/*
NOME: FB_INFO

CRIADO POR:
	CHARLES N. E. OLIVEIRA (neo_charles@outlook.com)
	
DESCRIÇÃO:
	ANTIGO IHM_INFO CONTEM AS PRINCIPAIS INFORMAÇOES DA IHM COMO POR EXEMPLO DATA E HORA CONVERTENDO-AS EM STRING  E AS PREPARANDO PARA IMPRESSÃO

OBJETIVO:
	COMPLETAR STRINGS NUMERICAS COM "0 A ESQUERDA" EM ATÉ 4 CARACTERES
	CONVERTER INFORMAÇÕES ENVIADA PELA CLP E AS PREPARA PARA IMPRESSÃO
	[Q] PODER SER USADA COMO BLOQUEIO DO SETUP EM CASO DE FALTA DE INFORMAÇÕES OU ATENDIMENTO DO ALVO DE PRODUÇÃO

ATUALIZAÇÕES:
	20210107 - ADICIONA 1 A S_PD
	20201208 - ANULA NOP02 EM CASO DE NOP_2 < 1
	20201124 - RESETA PRODUÇÃO EM CASO DE TROCA DE OP
*/

IF IN THEN

//Ordem de Produção
	// NOMERO DA ORDEM DE PRODUÇÃO
	IF OP1 > 0 THEN
		OP_OK := TRUE;
	ELSE
		OP_OK := FALSE;
	END_IF;
	
	// Elimina corte de zeros na variável NOP02 adicionando zeros à esquerda na string.
	sOP1 := ANY_TO_STRING(OP1);
	
	IF OP2 < 1 THEN
		sOP2 := '';
	ELSIF OP2 < 10 THEN
		sOP2 := '000' + ANY_TO_STRING(OP2);
	ELSIF OP2 < 100 THEN
		sOP2 := '00' + ANY_TO_STRING(OP2);
	ELSIF OP2 < 1000 THEN
		sOP2 := '0' + ANY_TO_STRING(OP2);
	ELSIF OP2 >= 1000 THEN
		sOP2 := ANY_TO_STRING(OP2);
	END_IF;
	
	// GERA STRING COM O NUMERO DA OP
	sProdOrder := sOP1 + sOP2;
	

//Data e Hora
	// Elimina corte de zeros nos DADOS DE DATA E HORA
	sAno := RIGHT(ANY_TO_STRING(Year),2);
	
	IF Month < 10 THEN
		sMes := '0' + ANY_TO_STRING(Month);
	ELSE
		sMes := ANY_TO_STRING(Month);
	END_IF;
	
	IF Day < 10 THEN
		sDia := '0' + ANY_TO_STRING(Day);
	ELSE
		sDia := ANY_TO_STRING(Day);
	END_IF;
	
	IF Hour < 10 THEN
		sHora := '0' + ANY_TO_STRING(Hour);
	ELSE
		sHora := ANY_TO_STRING(Hour);
	END_IF;
	
	IF Minute < 10 THEN
		sMinuto := '0' + ANY_TO_STRING(Minute);
	ELSE
		sMinuto	:= ANY_TO_STRING(Minute);
	END_IF;
	
	IF Second < 10 THEN
		sSegundo := '0' + ANY_TO_STRING(Second);
	ELSE
		sSegundo := ANY_TO_STRING(Second);
	END_IF;
	
	// GERA STRING COM DATA E HORA
	sDate := sDia + '/' + sMes + '/' + sAno + ' ' + sHora + ':' + sMinuto + ':' + sSegundo;
	
	
//Identificação do operador	
	// OPERADOR
	IF User > 0 THEN
		ID_OK := TRUE;
	ELSE
		ID_OK := FALSE;
	END_IF;
	
	// GERA STRING CRACHA OPERADOR
	sUser := ANY_TO_STRING(User);
	
	
//Produção
	// PRODUÇÃO ALVO
	IF ProdGoal > 0 AND ProdGoal >= ProdCount THEN
		PD_OK := TRUE;
	ELSE 
		PD_OK := FALSE;
	END_IF;
	
	// RESETA PRODUÇÃO EM CASO DE TROCA DE OP
	TON_1(ProdReset,T#500MS);
	
	IF sProdOrder <> STR_NW THEN
		ProdReset := TRUE;
		STR_NW := sProdOrder;
	END_IF;
	
	IF TON_1.Q THEN
		ProdReset := FALSE;
	END_IF;
	
	// GERA STRING PRODUÇÃO ATUAL
	sProdCount := ANY_TO_STRING(ProdCount + 1) + '/' + ANY_TO_STRING(ProdGoal);

	// MODELO
	IF Model > 0 THEN
		MD_OK := TRUE;
	ELSE 
		MD_OK := FALSE;
	END_IF;
	
	// ORDEM DE PRODUÇÃO
	IF OP_OK AND ID_OK AND MD_OK AND PD_OK THEN
		Q := IN;
	ELSE 
		Q := FALSE;
	END_IF;
		
	// GERA STRING COM A VERSÃO INFORMADA
	sVersion := ANY_TO_STRING(VS_Q) + ANY_TO_STRING(VS_ZGS);
	
	//BARCODE
	//IMP_BC = ANY_TO_STRING(BC);

END_IF;

CASE Model OF
	1: 
		sBarcode := '59 5421 001';
		sModel := 'RMT HTD LE';
		sPartNumber := 'A979 810 27 16';
	2: 
		sBarcode := '59 5421 002';
		sModel := 'RMT HTD LD';
		sPartNumber := 'A979 810 28 16';
	3:
		sBarcode := '60 5421 003';
		sModel := 'MAN UHT LE';
		sPartNumber := 'A979 810 25 16';
	4:
		sBarcode := '60 5421 004';
		sModel := 'MAN UHT LD';
		sPartNumber := 'A979 810 26 16';
ELSE
		sBarcode := '';
		sModel := '';
		sPartNumber := '';
		
END_CASE;
END_FUNCTION_BLOCK